[{"categories":["人工智能"],"content":"简单的机器学习了解","date":"2022-04-14","objectID":"https://mk310.github.io/machinglearing/","tags":["machinglearing"],"title":"机器学习","uri":"https://mk310.github.io/machinglearing/"},{"categories":["人工智能"],"content":"1-绪论 ","date":"2022-04-14","objectID":"https://mk310.github.io/machinglearing/:1:0","tags":["machinglearing"],"title":"机器学习","uri":"https://mk310.github.io/machinglearing/"},{"categories":["人工智能"],"content":"三个关系 artificial intelligence maching learning 人工智能的一个实现途径 deepinglearing 深度学习的神经网络 方法发展而来 ","date":"2022-04-14","objectID":"https://mk310.github.io/machinglearing/:1:1","tags":["machinglearing"],"title":"机器学习","uri":"https://mk310.github.io/machinglearing/"},{"categories":["人工智能"],"content":"分支 计算机视觉 自然语言处理 语音识别 困难：鸡尾酒会效应：不能处理多人交流 文本挖掘/分类 机器翻译 机器人 ","date":"2022-04-14","objectID":"https://mk310.github.io/machinglearing/:1:2","tags":["machinglearing"],"title":"机器学习","uri":"https://mk310.github.io/machinglearing/"},{"categories":["人工智能"],"content":"人工智能三要素 数据 算法 计算力 ","date":"2022-04-14","objectID":"https://mk310.github.io/machinglearing/:1:3","tags":["machinglearing"],"title":"机器学习","uri":"https://mk310.github.io/machinglearing/"},{"categories":["人工智能"],"content":"2-机器学习的工作流程 ","date":"2022-04-14","objectID":"https://mk310.github.io/machinglearing/:2:0","tags":["machinglearing"],"title":"机器学习","uri":"https://mk310.github.io/machinglearing/"},{"categories":["人工智能"],"content":"定义 数据 数据基本处理 特征工程 机器学习（模型训练） 模型评估 ","date":"2022-04-14","objectID":"https://mk310.github.io/machinglearing/:2:1","tags":["machinglearing"],"title":"机器学习","uri":"https://mk310.github.io/machinglearing/"},{"categories":["软件"],"content":" preference: https://zhuanlan.zhihu.com/p/94008510 哔哩哔哩_bilibili git log -5 --pretty=oneline 显示5行简单查看日志 ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:0:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"版本控制 git是分布式的版本控制系统 图： 所有clone远程库的本地库都拥有完整的version——databse ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:1:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"安装设置 设置用户名 git config --global user.name \"your username\" 设置用户邮箱 git config --global user.email \"you useremail\" 查看所有的配置 git config --list ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:2:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"三种状态 状态 描述 已提交（committed） 已提交表明数据已经安全的保存在本地的数据库中 已修改（modified） 已修改表示修改了文件，但是还没有保存到数据库中 已暂存（staged） 表示对一个已修改的文件的当前版本做了标记，使之包含在下次提交的快照中(下次提交，将标记的文件从暂存区提交到本地库中) 三种状态的关系图 git工作流程图 ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:3:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"创建版本库并提交文件例子 版本库及仓库，简单理解为一个目录，windows文件中的.git文件夹 初始化本地仓库 创建文件夹，进去后git init 创建一个空仓库 在文件夹中放入一个a.txt文件，使用git add命令添加到暂存区，git add \u003cpath\u003e path 可以是文件也可以是目录,例子：git add a.txt git status On branch master No commits yet Changes to be committed: (use \"git rm --cached \u003cfile\u003e...\" to unstage) new file: a.txt Untracked files: (use \"git add \u003cfile\u003e...\" to include in what will be committed) b.txt 提交到本地仓库 git commit -m '本次提交的说明' git log Author: mk310 \u003c1594401797@qq.com\u003e Date: Sat Apr 16 18:26:05 2022 +0800 git 测试提交了a.txt ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:4:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"版本回溯 修改工作区的a.txt，使用git diff HEAD -- a.text查看工作区的文件和版本库中的文件的区别 $ git diff HEAD -- a.txt diff --git a/a.txt b/a.txt index 75b9dc5..af32cb2 100644 --- a/a.txt +++ b/a.txt @@ -1,3 +1,3 @@ this is a git test file -git version plus test \\ No newline at end of file +git version plus test - version \\ No newline at end of file 如果将b.txt 文件误提交到暂存区，使用git reset HEAD 撤回提交的文件 ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:5:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"返回上一次的提交 git reset --hard HEAD^ Author: mk310 \u003c1594401797@qq.com\u003e Date: Mon Apr 18 15:35:05 2022 +0800 添加全部 commit 4d13d943de4aa3bb183c01b9432cb693e3275fee Author: mk310 \u003c1594401797@qq.com\u003e Date: Sat Apr 16 18:35:25 2022 +0800 提交了a.txt的修改 commit b27872183beaa169349415830fe7261b9ba5f6d5 Author: mk310 \u003c1594401797@qq.com\u003e Date: Sat Apr 16 18:26:05 2022 +0800 git 测试提交了a.txt 使用命令后 Author: mk310 \u003c1594401797@qq.com\u003e Date: Sat Apr 16 18:35:25 2022 +0800 提交了a.txt的修改 commit b27872183beaa169349415830fe7261b9ba5f6d5 Author: mk310 \u003c1594401797@qq.com\u003e Date: Sat Apr 16 18:26:05 2022 +0800 git 测试提交了a.txt ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:5:1","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"特定版本的回退 git reset --hard HEAD^ 这个^最多三个，表示退回三个版本 更多的回退则使用 git reset --hard HEAD~34 回到特定的版本 git reset --hard \u003c版本标识符\u003e ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:5:2","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"文件删除 在git中只关注文件的修改，文件的删除也是修改 如果在工作区误删除文件(前提是文件在删除前已经提交到本地仓库) git checkout -- \u003cfilename\u003e 删除文件/目录 git rm \u003cfilename\u003e git ls-files查看本地库的文件 ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:6:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"远程仓库 https 是简单的方式 ssh 加密的方式，而且更加的高效 #新建工作目录并进入 git init #若已经有本地仓库直接进行下列操作 git remote add \u003c要上传的仓库地址\u003e git add . git commit -m \"\" git push -u origin master ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:7:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"git分支操作 ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:8:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"本地分支 常见分支操作命令 命令 描述 注意 git checkout branch 切换到指定的分支 切换分支的时候，工作区的文件会随分支变化 git checkout -b new_branch 新建分支并切换到新建分支 git branch -d branch 删除指定的分支 git branch 查看所有的分支，并且标记当前所在的分支* git merge branch 合并分支 合并分支时要切换到master,操作后将分支的修改覆盖到master中；只能在master中合并分支 git branch -m |-M oldbranch newbranch 重命名分支，若newbranch已经存在，则使用-M强制重命名，否则使用-m重命名 ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:8:1","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"分支push pull操作 命令 描述 git branch -a 查看本地与远程分支 git push origin branch_name 推送本地分支到远程 git push origin :remote_branch 删除远程分支（本地分支还在保存） git checkout -b local_brach origin/remote_branch 提取远程指定的分支并在本地创建分支 git fetch查看远程仓库的最新状态 ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:8:2","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"分支操作冲突和解决办法 本地分支冲突 master 和分支同时进行不同的操作 未进行操作前master 和 leaf01 52e331fcc94db2b49c5efa47e101ab584ffd3fb3 b fc5e024e572348dec05c7f4f57cd4e67eea30d30 (origin/master, origin/leaf02) 删除readme ccb26cdce7fc848baa33b857c874cb873472373a 提交readme 进行操作 master 2b0e87f699833770cac0f49543be8436310fbc15 (HEAD -\u003e master) master 添加 master.txt fc5e024e572348dec05c7f4f57cd4e67eea30d30 (origin/master, origin/leaf02) 删除readme 52e331fcc94db2b49c5efa47e101ab584ffd3fb3 b ccb26cdce7fc848baa33b857c874cb873472373a 提交readme leaf01 57998bcf8cfa6a81b424c505b8d2686dff7f585e (HEAD -\u003e leaf01) leaf01 添加 leaf01.txt fc5e024e572348dec05c7f4f57cd4e67eea30d30 (origin/master, origin/leaf02) 删除readme 52e331fcc94db2b49c5efa47e101ab584ffd3fb3 b ccb26cdce7fc848baa33b857c874cb873472373a 提交readme 切换到master，使用git merge leaf01填写commit解释 $ git log --graph --pretty=oneline * 1d9c9a7319ef31eaff0b92d10afea718105a84a8 (HEAD -\u003e master, origin/master) --- |\\ | * 57998bcf8cfa6a81b424c505b8d2686dff7f585e (leaf01) leaf01 添加 leaf01.txt * | 2b0e87f699833770cac0f49543be8436310fbc15 master 添加 master.txt |/ * fc5e024e572348dec05c7f4f57cd4e67eea30d30 (origin/leaf02) 删除readme * 52e331fcc94db2b49c5efa47e101ab584ffd3fb3 b * ccb26cdce7fc848baa33b857c874cb873472373a 提交readme git 使用 ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:8:3","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"git远程仓库切换到gitee 删除本地远程仓库 git remote rm origin 添加gitee远程仓库 git remote add 仓库名 设置用户名，用户邮箱 git config --global user.name \"\" git config --global user.email \" \" ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:9:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["软件"],"content":"git删除远程仓库的所有文件 prefence:git删除所有文件夹（清空远程仓库） 首先确定与远程仓库连接，然后命令： git rm * -f -r #删除所有的文件 git add . #提交修改到暂存区 git commit -m\"\" #提交修改到本地仓库 git push ","date":"2022-04-16","objectID":"https://mk310.github.io/software_git/:10:0","tags":["git"],"title":"git","uri":"https://mk310.github.io/software_git/"},{"categories":["论文"],"content":"摘要 ","date":"2022-04-11","objectID":"https://mk310.github.io/paper/:1:0","tags":["毕业论文方法"],"title":"论文","uri":"https://mk310.github.io/paper/"},{"categories":["论文"],"content":"绪论 reference: 毕业论文怎么写——论文摘要论文绪论模板_哔哩哔哩_bilibili ","date":"2022-04-11","objectID":"https://mk310.github.io/paper/:2:0","tags":["毕业论文方法"],"title":"论文","uri":"https://mk310.github.io/paper/"},{"categories":["论文"],"content":"研究背景 社会大环境 通过中国互联网信息中心报告http://www.cnnic.net.cn/hlwfzyj/hlwxzbg/hlwtjbg/ 提取信息 然后进入 同义词替换 - 极智查词 (chaci.xyz) 排重 行业环境 中国爬虫图鉴 (qq.com) 数据可视化现状调研_casainurbania的博客-CSDN博客_数据可视化研究现状 目前，网络上的爬虫主要是爬取火车票，导致火车预定平台承受了很大的访问压力；其次是爬取社交软件，互联网公司可以根据社交软件的个人信息进行广告定点投放，信息推送等；第三是电商平台，通过爬取电商信息，让商户能够绕过平台投送广告；接下来是 搜索引擎，爬虫通过增加网站的点击次数，让网站在搜索显示上排在前面。同时针对政府部门的爬虫也不容小觑。针对政府部门存储的公民个人信息发起的爬虫攻击很让人头痛。 ","date":"2022-04-11","objectID":"https://mk310.github.io/paper/:2:1","tags":["毕业论文方法"],"title":"论文","uri":"https://mk310.github.io/paper/"},{"categories":["论文"],"content":"研究意义 网络爬虫是目前我国互联网为了搜集信息，而普遍开展的业务之一。如何从复杂的网络信息中寻找，整理，分析从而进行可视化是许多互联网 企业和研究机构研究面临的问题。但是国内外学术对这几方面整合的研究尚少。通过本文对爬虫可视化的密切联系，对课题深入研究，提出数据爬取和可视化整合建议，为丰富当前数据可视化理论起到一定的借鉴作用。 理论 现实 ","date":"2022-04-11","objectID":"https://mk310.github.io/paper/:2:2","tags":["毕业论文方法"],"title":"论文","uri":"https://mk310.github.io/paper/"},{"categories":["论文"],"content":"研究现状 国内 主题爬虫技术研究综述 - 中国知网 (cnki.net) 高性能网络爬虫:研究综述 - 中国知网 (cnki.net) 基于PaaS平台的矢量关系化数据可视化方法 - 中国知网 (cnki.net) 国外 患者论坛帖子中不遵守药物治疗的检测案例：主题模型方法-科学核心合集 (webofscience.com) 2019年骄傲数据库及相关工具和资源：提升对量化数据的支持-Web of Science 核心合集 2022 年曾繁超为了缩短矢量关系化数据可视化响应和转换时间，提高数据转换准确率，确保硬件配置适应性，提出基于PaaS平台的矢量关系化数据可视化方法。 2018年 为检测描述患者与感兴趣药物相关的不合规行为的信息，阿卜杜拉维， 雷德胡恩等做出在患者论坛帖子中检测不遵守药物治疗的病例：主题模型方法的研究。 2019年为完善世界上最大的基于质谱的蛋白质组学数据存储库，佩雷斯-里韦罗尔， 亚塞特等 做出 2019年的PRIDE数据库及相关工具和资源：改善对量化数据的支持 的研究 2020年为探清中国南北饮食习惯的差异姚可桢，岳书平做出了网络大数据下的中国现代食甜习惯空间分布特征及其影响因素研究。 2020年 为有效提取和利用日益增长的网络数据，潘晓英，陈柳等对主题爬虫做出了深入研究。 ","date":"2022-04-11","objectID":"https://mk310.github.io/paper/:2:3","tags":["毕业论文方法"],"title":"论文","uri":"https://mk310.github.io/paper/"},{"categories":["论文"],"content":"研究方法 本文将借助现有的python爬虫研究爬取电影评分网站数据，利用flask和html，css，js搭建网站，利用echarts可视化展现爬取的数据，将python爬虫和数据可视化联系在一起。 ","date":"2022-04-11","objectID":"https://mk310.github.io/paper/:2:4","tags":["毕业论文方法"],"title":"论文","uri":"https://mk310.github.io/paper/"}]